name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=10

    env:
      APP_ENV: testing
      APP_DEBUG: true
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: test_db
      DB_USERNAME: root
      DB_PASSWORD: root
      CACHE_STORE: array
      QUEUE_CONNECTION: sync
      FILESYSTEM_DISK: local

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, pdo_mysql
          coverage: none
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Lint PHP (Pint)
        run: vendor/bin/pint -v --test

      - name: Prepare .env and key
        run: |
          cp .env.example .env || true
          php artisan key:generate --ansi

      - name: Run Migrations
        run: php artisan migrate --force --ansi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Run tests
        run: php artisan test --ansi